name: build 

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
jobs:
  build-llvm:
      runs-on: ubuntu-20.04
      steps:
      - uses: actions/checkout@v4
      - name: Set Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 8
      - name: prepare
        run: |
          sudo apt update
          sudo apt install -y ninja-build
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          ./emsdk install latest
          ./emsdk activate latest
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: 500M
          key: llvm
      - name: make
        run: |
          source ./emsdk/emsdk_env.sh
          ./build.sh prepare
      - name: Archive dists
        uses: actions/upload-artifact@v4
        with:
          retention-days: 1
          name: build-llvm
          path: build
  builds:
      needs: build-llvm
      strategy:
        matrix:
          build_package: [clangd, clang]
      runs-on: ubuntu-20.04
      steps:
      - uses: actions/checkout@v4
      - name: Set Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 8
      - name: prepare
        run: |
          sudo apt update
          sudo apt install -y ninja-build
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          ./emsdk install latest
          ./emsdk activate latest
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: 500M
          key: ${{ matrix.build_package }}
      - name: Download builds
        uses: actions/download-artifact@v4
        with:
          name: build-llvm
          path: build
      - name: make
        run: |
          source ./emsdk/emsdk_env.sh
          ./build.sh ${{ matrix.build_package }}
      - name: Archive dists
        uses: actions/upload-artifact@v4
        with:
          name: out-${{ matrix.build_package }}
          path: pkg/dist
  publish:
    needs: builds
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v4
    - name: Download dists
      uses: actions/download-artifact@v4
      with:
        pattern: out-*
        path: pkg/dist
    - uses: JS-DevTools/npm-publish@v3.1.1
      with:
        token: ${{secrets.GITHUB_TOKEN}}
        registry: "https://npm.pkg.github.com/"
        package: pkg
